// <auto-generated />
using System;
using DataLayer.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DataLayer.Migrations
{
    [DbContext(typeof(UserDbContext))]
    [Migration("20220610145641_Added_something12")]
    partial class Added_something12
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("DataLayer.Model.Admin", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<string>("Adresa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DatumRodjenja")
                        .HasColumnType("datetime2");

                    b.Property<string>("KorisnickoIme")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Lozinka")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PunoIme")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("Slika")
                        .HasColumnType("varbinary(max)");

                    b.HasKey("Id");

                    b.ToTable("Admini");
                });

            modelBuilder.Entity("DataLayer.Model.Dostavljac", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<string>("Adresa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DatumRodjenja")
                        .HasColumnType("datetime2");

                    b.Property<string>("KorisnickoIme")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Lozinka")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PunoIme")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("Slika")
                        .HasColumnType("varbinary(max)");

                    b.HasKey("Id");

                    b.ToTable("Dostavljaci");
                });

            modelBuilder.Entity("DataLayer.Model.Kolicina", b =>
                {
                    b.Property<long>("ProductId")
                        .HasColumnType("bigint");

                    b.Property<long>("OrderId")
                        .HasColumnType("bigint");

                    b.Property<int>("KolicinaProizvoda")
                        .HasColumnType("int");

                    b.HasKey("ProductId", "OrderId");

                    b.HasIndex("OrderId");

                    b.ToTable("Kolicina");
                });

            modelBuilder.Entity("DataLayer.Model.OrderModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<string>("Adresa")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("Cena")
                        .HasPrecision(8, 2)
                        .HasColumnType("decimal(8,2)");

                    b.Property<long?>("DostavljacId")
                        .HasColumnType("bigint");

                    b.Property<string>("Komentar")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<long?>("KorisnikId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("DostavljacId");

                    b.HasIndex("KorisnikId");

                    b.ToTable("Porudzbine");
                });

            modelBuilder.Entity("DataLayer.Model.Product", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<decimal>("Cena")
                        .HasPrecision(8, 2)
                        .HasColumnType("decimal(8,2)");

                    b.Property<string>("ImeProizvoda")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Sastojci")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("ImeProizvoda")
                        .IsUnique()
                        .HasFilter("[ImeProizvoda] IS NOT NULL");

                    b.ToTable("Proizvodi");
                });

            modelBuilder.Entity("DataLayer.Model.UserModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<string>("Adresa")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("DatumRodjenja")
                        .HasColumnType("datetime2");

                    b.Property<string>("KorisnickoIme")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Lozinka")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("PunoIme")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<byte[]>("Slika")
                        .HasColumnType("varbinary(max)");

                    b.HasKey("Id");

                    b.HasIndex("KorisnickoIme")
                        .IsUnique()
                        .HasFilter("[KorisnickoIme] IS NOT NULL");

                    b.ToTable("Korisnici");
                });

            modelBuilder.Entity("DataLayer.Model.Kolicina", b =>
                {
                    b.HasOne("DataLayer.Model.OrderModel", "Order")
                        .WithMany("Kolicine")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataLayer.Model.Product", "Product")
                        .WithMany("Kolicine")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("DataLayer.Model.OrderModel", b =>
                {
                    b.HasOne("DataLayer.Model.Dostavljac", "Dostavljac")
                        .WithMany("Dostave")
                        .HasForeignKey("DostavljacId");

                    b.HasOne("DataLayer.Model.UserModel", "Korisnik")
                        .WithMany("Porudzbine")
                        .HasForeignKey("KorisnikId");

                    b.Navigation("Dostavljac");

                    b.Navigation("Korisnik");
                });

            modelBuilder.Entity("DataLayer.Model.Dostavljac", b =>
                {
                    b.Navigation("Dostave");
                });

            modelBuilder.Entity("DataLayer.Model.OrderModel", b =>
                {
                    b.Navigation("Kolicine");
                });

            modelBuilder.Entity("DataLayer.Model.Product", b =>
                {
                    b.Navigation("Kolicine");
                });

            modelBuilder.Entity("DataLayer.Model.UserModel", b =>
                {
                    b.Navigation("Porudzbine");
                });
#pragma warning restore 612, 618
        }
    }
}
